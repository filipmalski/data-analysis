AVERAGEX, SUMX etc jako pierwszy argument biorÄ… tabele - jesli chcemy liczyc cos po miesiacach dniach latach jako argument
VALUES() jako lista uniklanych wartosci i wtedy te wartosci beda podstawa do agregacji danych
w funkcji CALCULATE() - tabele zmnieniaja kontekst to obliczen, mozna korzystac z funkcji zwracajacych tabele np DATESYTD(), DATESBETWEEN()
-------------------------------------------------------------------------------------
DateTable = 
ADDCOLUMNS ( 
CALENDAR(MINX('sales','sales'[date]),MAXX('sales','sales'[date])),
"DateAsInteger", FORMAT ( [date], "YYYYMMDD" ),
 "Year", YEAR ( [date] ), "MonthNo", FORMAT ( [date], "MM" ), 
"YearMonthNo", FORMAT ( [date], "YYYY/MM" ), 
"YearMonth", FORMAT ( [date], "YYYY/mmm" ), 
"MonthShort", FORMAT ( [date], "mmm" ),
"MonthLong", FORMAT ( [date], "mmmm" ), 
"WeekNo", WEEKDAY ( [date] ), 
"WeekDay", FORMAT ( [date], "dddd" ), 
"WeekDayShort", FORMAT ( [date], "ddd" ), 
"Quarter", "Q" & FORMAT ( [date], "Q" ), 
"YearQuarter", FORMAT ( [date], "YYYY" ) & "/Q" & FORMAT ( [date], "Q" ))
--------------------------------------------------------------------------------------
Grupowanie wg top N
1. Revenue Measure
Revenue Measure = SUMX( sales , sales[quantity] * sales[price] ) 
2. Calculated column in the products table 
Ranking by Revenue = CALCULATE( RANKX( ALL(products) , [Revenue Measure] ))
3. Manually create a new table with the 'Enter data manually' option as follows
TopNames Min Max
Top 10    1   10
11-20     11  20
5. Now you can create your final measure
Revnue by topN products = CALCULATE([Revenue Measure],
    FILTER(products, 
        MAX('TopNFilter-Exercise'[Max]) >= products[Ranking by Revenue]
        && 
        MIN('TopNFilter-Exercise'[Min])  <= products[Ranking by Revenue]))
-----------------------------------------------------------------------------------------
quarterly average revenue = 
AVERAGEX(
    VALUES(DateTable[YearQuarter]), // unikalne year & q jako agregacja per kwartal
    [Reve]) // reve measure dla kazdego quarter oblicza reve
------------------------------------------------------------------------------------------
Share of products with price >3 in total = 
CALCULATE(
        COUNT(sales[quantity]), 
        FILTER(products, products[price] >3)) 
/ CALCULATE(COUNT(sales[quantity]), ALL(products))
------------------------------------------------------------------------------------------
Ranking by Reve = 
CALCULATE(RANKX(ALL(products),[Reve]))
-------------------------------------------------------------------------------------------
% in total revenue = CALCULATE([Reve]) / CALCULATE([Reve], ALL(DateTable[Year]))
-------------------------------------------------------------------------------------------
All time customer ranking by quarterly average = 
CALCULATE(
    RANKX(ALL(customer), // ALL bierze pod uwage wszytskich clientow niezaleznie od filtrow
    [quarterly average revenue]), // dla kazdego z nich oblicza avg quarter reve 
    ALL(DateTable[Year])) //ranking na podstawie wszystkich lat niezaleznie od filtrow
--------------------------------------------------------------------------------------------
Difference from the filtered revenue = 
VAR FilteredRevenue = 
CALCULATE([Reve], 
    FILTER(
    products, products[price] < 6 && products[price]>4 || NOT(LEFT(products[product],1)="C")), 
    FILTER(location, location[state]="Arizona"))
VAR Revenue = [Reve]
RETURN 
Revenue - FilteredRevenue
-----------------------------------------------------------------------------------------------
YTD Cumulative Reve = 
CALCULATE([Reve], 
DATESYTD(DateTable[Date]))
------------------------------------------------------------------------------------------------
Datesbetween example = CALCULATE([Reve], DATESBETWEEN(DateTable[Date],"2017-06-30", MAX(DateTable[Date])))
-----------------------------------------------------------------------------------------------
Reve MoM = 
VAR Reve = CALCULATE([Reve])
VAR PreviousReve = CALCULATE([Reve], DATEADD(DateTable[Date],-1,MONTH))
RETURN 
IF(PreviousReve = BLANK(),"", (Reve / PreviousReve)-1)
-------------------------------------------------------------------------------------------------
Product share in Total = 
VAR TotalReve = CALCULATE([Reve], ALL(products[product]))
VAR ProductReve = CALCULATE([Reve])
RETURN
DIVIDE(ProductReve,TotalReve)
--------------------------------------------------------------------------------------------------
FILTRY Z UZYCIEM TABELI (TWORZENIE KATEGORII GRUP DO FILTROWANIE)
Final Measure for Reve = 
IF( MAX (FilterRevenueTable[FilterRevenue]) = "Gross",
    CALCULATE([Reve],  
        DATESBETWEEN(DateTable[Date],
        MAX(DateTable[Date]) - MAX(TimeFilterTable[TimeValues]),
        MAX(DateTable[Date]))),

    IF(MAX(FilterRevenueTable[FilterRevenue])="Net",
    [Net Reve],

    
    [Profit Measure]
    )
)
